name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      REDIRECT_URI: ${{ secrets.REDIRECT_URI }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.DOCKER_HUB_USERNAME }}/dashchat-server .
          docker push ${{ env.DOCKER_HUB_USERNAME }}/dashchat-server

      - name: Create directory on EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "mkdir -p /home/${{ env.SSH_USER }}/app"

      - name: Sync docker-compose files
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:/home/${{ env.SSH_USER }}/app/docker-compose.yml

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ env.SSH_PRIVATE_KEY }} ${{ env.SSH_USER }}@${{ env.SSH_HOST }} << EOF
            export DOCKER_HUB_USERNAME=${{ env.DOCKER_HUB_USERNAME }}
            export DB_HOST=${{ env.DB_HOST }}
            export DB_USER=${{ env.DB_USER }}
            export DB_NAME=${{ env.DB_NAME }}
            export DB_PORT=${{ env.DB_PORT }}
            export AWS_ACCESS_KEY=${{ env.AWS_ACCESS_KEY }}
            export AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=${{ env.AWS_REGION }}
            export CLIENT_ID=${{ env.CLIENT_ID }}
            export CLIENT_SECRET=${{ env.CLIENT_SECRET }}
            export REDIRECT_URI=${{ env.REDIRECT_URI }}
            docker stop dashchat-server || true
            docker rm dashchat-server || true
            docker rmi $DOCKER_HUB_USERNAME/dashchat-server || true

            docker-compose -f /home/${{ env.SSH_USER }}/app/docker-compose.yml pull
            docker-compose -f /home/${{ env.SSH_USER }}/app/docker-compose.yml up -d --remove-orphans
          EOF
